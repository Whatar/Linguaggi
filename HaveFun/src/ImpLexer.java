// Generated from C:/Users/leona/Documents/GitHub/Linguaggi/HaveFun/src\Imp.g4 by ANTLR 4.12.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class ImpLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.12.0", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		INITFUN=1, RETURN=2, GLOBAL=3, GL=4, NAT=5, BOOL=6, PLUS=7, MINUS=8, MUL=9, 
		DIV=10, MOD=11, POW=12, AND=13, OR=14, EQQ=15, NEQ=16, LEQ=17, GEQ=18, 
		LT=19, GT=20, NOT=21, IF=22, THEN=23, ELSE=24, WHILE=25, SKIPP=26, ASSIGN=27, 
		OUT=28, LPAR=29, RPAR=30, LBRACE=31, RBRACE=32, SEMICOLON=33, ARNC_INIT=34, 
		ARNC_END=35, ID=36, WS=37;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"INITFUN", "RETURN", "GLOBAL", "GL", "NAT", "BOOL", "PLUS", "MINUS", 
			"MUL", "DIV", "MOD", "POW", "AND", "OR", "EQQ", "NEQ", "LEQ", "GEQ", 
			"LT", "GT", "NOT", "IF", "THEN", "ELSE", "WHILE", "SKIPP", "ASSIGN", 
			"OUT", "LPAR", "RPAR", "LBRACE", "RBRACE", "SEMICOLON", "ARNC_INIT", 
			"ARNC_END", "ID", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'fun'", "'return'", "'global'", "'.g'", null, null, "'+'", "'-'", 
			"'*'", "'/'", "'mod'", "'^'", "'&'", "'|'", "'=='", "'!='", "'<='", "'>='", 
			"'<'", "'>'", "'!'", "'if'", "'then'", "'else'", "'while'", "'skip'", 
			"'='", "'out'", "'('", "')'", "'{'", "'}'", "';'", "'${'", "'}$'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "INITFUN", "RETURN", "GLOBAL", "GL", "NAT", "BOOL", "PLUS", "MINUS", 
			"MUL", "DIV", "MOD", "POW", "AND", "OR", "EQQ", "NEQ", "LEQ", "GEQ", 
			"LT", "GT", "NOT", "IF", "THEN", "ELSE", "WHILE", "SKIPP", "ASSIGN", 
			"OUT", "LPAR", "RPAR", "LBRACE", "RBRACE", "SEMICOLON", "ARNC_INIT", 
			"ARNC_END", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ImpLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Imp.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000%\u00d3\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0005\u0004d\b\u0004"+
		"\n\u0004\f\u0004g\t\u0004\u0003\u0004i\b\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0003\u0005t\b\u0005\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017"+
		"\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018"+
		"\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f"+
		"\u0001\u001f\u0001 \u0001 \u0001!\u0001!\u0001!\u0001\"\u0001\"\u0001"+
		"\"\u0001#\u0004#\u00c9\b#\u000b#\f#\u00ca\u0001$\u0004$\u00ce\b$\u000b"+
		"$\f$\u00cf\u0001$\u0001$\u0000\u0000%\u0001\u0001\u0003\u0002\u0005\u0003"+
		"\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015"+
		"\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012"+
		"%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c"+
		"9\u001d;\u001e=\u001f? A!C\"E#G$I%\u0001\u0000\u0004\u0001\u000019\u0001"+
		"\u000009\u0002\u0000AZaz\u0003\u0000\t\n\r\r  \u00d7\u0000\u0001\u0001"+
		"\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001"+
		"\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000"+
		"\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000"+
		"\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000"+
		"\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000"+
		"\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000"+
		"\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000"+
		"\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000"+
		"\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'"+
		"\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000"+
		"\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000"+
		"\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005"+
		"\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000"+
		"\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000"+
		"\u0000?\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C"+
		"\u0001\u0000\u0000\u0000\u0000E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000"+
		"\u0000\u0000\u0000I\u0001\u0000\u0000\u0000\u0001K\u0001\u0000\u0000\u0000"+
		"\u0003O\u0001\u0000\u0000\u0000\u0005V\u0001\u0000\u0000\u0000\u0007]"+
		"\u0001\u0000\u0000\u0000\th\u0001\u0000\u0000\u0000\u000bs\u0001\u0000"+
		"\u0000\u0000\ru\u0001\u0000\u0000\u0000\u000fw\u0001\u0000\u0000\u0000"+
		"\u0011y\u0001\u0000\u0000\u0000\u0013{\u0001\u0000\u0000\u0000\u0015}"+
		"\u0001\u0000\u0000\u0000\u0017\u0081\u0001\u0000\u0000\u0000\u0019\u0083"+
		"\u0001\u0000\u0000\u0000\u001b\u0085\u0001\u0000\u0000\u0000\u001d\u0087"+
		"\u0001\u0000\u0000\u0000\u001f\u008a\u0001\u0000\u0000\u0000!\u008d\u0001"+
		"\u0000\u0000\u0000#\u0090\u0001\u0000\u0000\u0000%\u0093\u0001\u0000\u0000"+
		"\u0000\'\u0095\u0001\u0000\u0000\u0000)\u0097\u0001\u0000\u0000\u0000"+
		"+\u0099\u0001\u0000\u0000\u0000-\u009c\u0001\u0000\u0000\u0000/\u00a1"+
		"\u0001\u0000\u0000\u00001\u00a6\u0001\u0000\u0000\u00003\u00ac\u0001\u0000"+
		"\u0000\u00005\u00b1\u0001\u0000\u0000\u00007\u00b3\u0001\u0000\u0000\u0000"+
		"9\u00b7\u0001\u0000\u0000\u0000;\u00b9\u0001\u0000\u0000\u0000=\u00bb"+
		"\u0001\u0000\u0000\u0000?\u00bd\u0001\u0000\u0000\u0000A\u00bf\u0001\u0000"+
		"\u0000\u0000C\u00c1\u0001\u0000\u0000\u0000E\u00c4\u0001\u0000\u0000\u0000"+
		"G\u00c8\u0001\u0000\u0000\u0000I\u00cd\u0001\u0000\u0000\u0000KL\u0005"+
		"f\u0000\u0000LM\u0005u\u0000\u0000MN\u0005n\u0000\u0000N\u0002\u0001\u0000"+
		"\u0000\u0000OP\u0005r\u0000\u0000PQ\u0005e\u0000\u0000QR\u0005t\u0000"+
		"\u0000RS\u0005u\u0000\u0000ST\u0005r\u0000\u0000TU\u0005n\u0000\u0000"+
		"U\u0004\u0001\u0000\u0000\u0000VW\u0005g\u0000\u0000WX\u0005l\u0000\u0000"+
		"XY\u0005o\u0000\u0000YZ\u0005b\u0000\u0000Z[\u0005a\u0000\u0000[\\\u0005"+
		"l\u0000\u0000\\\u0006\u0001\u0000\u0000\u0000]^\u0005.\u0000\u0000^_\u0005"+
		"g\u0000\u0000_\b\u0001\u0000\u0000\u0000`i\u00050\u0000\u0000ae\u0007"+
		"\u0000\u0000\u0000bd\u0007\u0001\u0000\u0000cb\u0001\u0000\u0000\u0000"+
		"dg\u0001\u0000\u0000\u0000ec\u0001\u0000\u0000\u0000ef\u0001\u0000\u0000"+
		"\u0000fi\u0001\u0000\u0000\u0000ge\u0001\u0000\u0000\u0000h`\u0001\u0000"+
		"\u0000\u0000ha\u0001\u0000\u0000\u0000i\n\u0001\u0000\u0000\u0000jk\u0005"+
		"t\u0000\u0000kl\u0005r\u0000\u0000lm\u0005u\u0000\u0000mt\u0005e\u0000"+
		"\u0000no\u0005f\u0000\u0000op\u0005a\u0000\u0000pq\u0005l\u0000\u0000"+
		"qr\u0005s\u0000\u0000rt\u0005e\u0000\u0000sj\u0001\u0000\u0000\u0000s"+
		"n\u0001\u0000\u0000\u0000t\f\u0001\u0000\u0000\u0000uv\u0005+\u0000\u0000"+
		"v\u000e\u0001\u0000\u0000\u0000wx\u0005-\u0000\u0000x\u0010\u0001\u0000"+
		"\u0000\u0000yz\u0005*\u0000\u0000z\u0012\u0001\u0000\u0000\u0000{|\u0005"+
		"/\u0000\u0000|\u0014\u0001\u0000\u0000\u0000}~\u0005m\u0000\u0000~\u007f"+
		"\u0005o\u0000\u0000\u007f\u0080\u0005d\u0000\u0000\u0080\u0016\u0001\u0000"+
		"\u0000\u0000\u0081\u0082\u0005^\u0000\u0000\u0082\u0018\u0001\u0000\u0000"+
		"\u0000\u0083\u0084\u0005&\u0000\u0000\u0084\u001a\u0001\u0000\u0000\u0000"+
		"\u0085\u0086\u0005|\u0000\u0000\u0086\u001c\u0001\u0000\u0000\u0000\u0087"+
		"\u0088\u0005=\u0000\u0000\u0088\u0089\u0005=\u0000\u0000\u0089\u001e\u0001"+
		"\u0000\u0000\u0000\u008a\u008b\u0005!\u0000\u0000\u008b\u008c\u0005=\u0000"+
		"\u0000\u008c \u0001\u0000\u0000\u0000\u008d\u008e\u0005<\u0000\u0000\u008e"+
		"\u008f\u0005=\u0000\u0000\u008f\"\u0001\u0000\u0000\u0000\u0090\u0091"+
		"\u0005>\u0000\u0000\u0091\u0092\u0005=\u0000\u0000\u0092$\u0001\u0000"+
		"\u0000\u0000\u0093\u0094\u0005<\u0000\u0000\u0094&\u0001\u0000\u0000\u0000"+
		"\u0095\u0096\u0005>\u0000\u0000\u0096(\u0001\u0000\u0000\u0000\u0097\u0098"+
		"\u0005!\u0000\u0000\u0098*\u0001\u0000\u0000\u0000\u0099\u009a\u0005i"+
		"\u0000\u0000\u009a\u009b\u0005f\u0000\u0000\u009b,\u0001\u0000\u0000\u0000"+
		"\u009c\u009d\u0005t\u0000\u0000\u009d\u009e\u0005h\u0000\u0000\u009e\u009f"+
		"\u0005e\u0000\u0000\u009f\u00a0\u0005n\u0000\u0000\u00a0.\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0005e\u0000\u0000\u00a2\u00a3\u0005l\u0000\u0000"+
		"\u00a3\u00a4\u0005s\u0000\u0000\u00a4\u00a5\u0005e\u0000\u0000\u00a50"+
		"\u0001\u0000\u0000\u0000\u00a6\u00a7\u0005w\u0000\u0000\u00a7\u00a8\u0005"+
		"h\u0000\u0000\u00a8\u00a9\u0005i\u0000\u0000\u00a9\u00aa\u0005l\u0000"+
		"\u0000\u00aa\u00ab\u0005e\u0000\u0000\u00ab2\u0001\u0000\u0000\u0000\u00ac"+
		"\u00ad\u0005s\u0000\u0000\u00ad\u00ae\u0005k\u0000\u0000\u00ae\u00af\u0005"+
		"i\u0000\u0000\u00af\u00b0\u0005p\u0000\u0000\u00b04\u0001\u0000\u0000"+
		"\u0000\u00b1\u00b2\u0005=\u0000\u0000\u00b26\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0005o\u0000\u0000\u00b4\u00b5\u0005u\u0000\u0000\u00b5\u00b6\u0005"+
		"t\u0000\u0000\u00b68\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005(\u0000"+
		"\u0000\u00b8:\u0001\u0000\u0000\u0000\u00b9\u00ba\u0005)\u0000\u0000\u00ba"+
		"<\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005{\u0000\u0000\u00bc>\u0001"+
		"\u0000\u0000\u0000\u00bd\u00be\u0005}\u0000\u0000\u00be@\u0001\u0000\u0000"+
		"\u0000\u00bf\u00c0\u0005;\u0000\u0000\u00c0B\u0001\u0000\u0000\u0000\u00c1"+
		"\u00c2\u0005$\u0000\u0000\u00c2\u00c3\u0005{\u0000\u0000\u00c3D\u0001"+
		"\u0000\u0000\u0000\u00c4\u00c5\u0005}\u0000\u0000\u00c5\u00c6\u0005$\u0000"+
		"\u0000\u00c6F\u0001\u0000\u0000\u0000\u00c7\u00c9\u0007\u0002\u0000\u0000"+
		"\u00c8\u00c7\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000\u0000"+
		"\u00ca\u00c8\u0001\u0000\u0000\u0000\u00ca\u00cb\u0001\u0000\u0000\u0000"+
		"\u00cbH\u0001\u0000\u0000\u0000\u00cc\u00ce\u0007\u0003\u0000\u0000\u00cd"+
		"\u00cc\u0001\u0000\u0000\u0000\u00ce\u00cf\u0001\u0000\u0000\u0000\u00cf"+
		"\u00cd\u0001\u0000\u0000\u0000\u00cf\u00d0\u0001\u0000\u0000\u0000\u00d0"+
		"\u00d1\u0001\u0000\u0000\u0000\u00d1\u00d2\u0006$\u0000\u0000\u00d2J\u0001"+
		"\u0000\u0000\u0000\u0006\u0000ehs\u00ca\u00cf\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}